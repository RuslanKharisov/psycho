name: Deploy Bot with PM2

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Build for Linux
        run: GOOS=linux GOARCH=amd64 go build -o bin/tg-bot-app cmd/tg-bot-app/main.go

      - name: Create .env file
        run: |
          echo "TG_TOKEN=${{ secrets.TG_TOKEN }}" > .env
          echo "OPENAI_KEY=${{ secrets.OPENAI_KEY }}" >> .env
          echo "REDIS_ADDR=${{ secrets.REDIS_ADDR }}" >> .env
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> .env

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy and restart with PM2
        run: |
          # Копируем файлы на сервер
          scp bin/tg-bot-app .env ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:~/tg-bot-app/

          # Управление процессом через PM2
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd ~/tg-bot-app
            chmod +x tg-bot-app
            
            # Проверяем, существует ли процесс
            if pm2 id tg-bot-app > /dev/null; then
              echo "Restarting existing PM2 process..."
              pm2 restart tg-bot-app --update-env
            else
              echo "Starting new PM2 process..."
              pm2 start ./tg-bot-app --name tg-bot-app \
                --log ~/tg-bot-app/logs/app.log \
                --error ~/tg-bot-app/logs/error.log \
                --time
              pm2 save
              pm2 startup | grep -v "sudo" | bash
            fi
            
            # Логи статуса
            pm2 status
            pm2 logs tg-bot-app --lines 20
          EOF
